{"ast":null,"code":"var _jsxFileName = \"/home/prince/Desktop/Assignment-IMDB/src/TopRated/index.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\n// import './styles.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Cards = () => {\n  _s();\n  const [movies, setMovies] = useState([]); // Stores the movie data\n  const [selectedMovie, setSelectedMovie] = useState(null); // Stores the currently selected movie\n\n  useEffect(() => {\n    fetch('https://api.themoviedb.org/3/movie/top_rated?api_key=ebab107d0e771faee711646843039664&language=en-US').then(response => response.json()) // Convert response to JSON\n    .then(data => setMovies(data.results)) // Set the movies state with the fetched data\n    .catch(error => console.log(error)); // Log any errors that occur during the fetch\n  }, []);\n\n  // Handle click event when a movie is selected\n  const handleClick = movie => {\n    setSelectedMovie(movie);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Top Rated Movies\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"movie-list\",\n      children: movies.map(movie => /*#__PURE__*/_jsxDEV(Link, {\n        to: `/movie/${movie.id}`,\n        onClick: () => handleClick(movie),\n        className: \"cards\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"movie-overlay\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"info-card-title\",\n            children: movie.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"rating\",\n            children: [\"Rating: \", movie.vote_average]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: `https://image.tmdb.org/t/p/w300/${movie.poster_path}`,\n          alt: movie.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 13\n        }, this)]\n      }, movie.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n_s(Cards, \"PO+XgOji7E32nFJj3H5UPLPJ7w4=\");\n_c = Cards;\nexport default Cards;\nvar _c;\n$RefreshReg$(_c, \"Cards\");","map":{"version":3,"names":["React","useState","useEffect","Link","jsxDEV","_jsxDEV","Cards","_s","movies","setMovies","selectedMovie","setSelectedMovie","fetch","then","response","json","data","results","catch","error","console","log","handleClick","movie","children","fileName","_jsxFileName","lineNumber","columnNumber","className","map","to","id","onClick","title","vote_average","src","poster_path","alt","_c","$RefreshReg$"],"sources":["/home/prince/Desktop/Assignment-IMDB/src/TopRated/index.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\n// import './styles.css';\n\nconst Cards = () => {\n  const [movies, setMovies] = useState([]); // Stores the movie data\n  const [selectedMovie, setSelectedMovie] = useState(null); // Stores the currently selected movie\n\n  useEffect(() => {\n    fetch(\n      'https://api.themoviedb.org/3/movie/top_rated?api_key=ebab107d0e771faee711646843039664&language=en-US'\n    )\n      .then((response) => response.json()) // Convert response to JSON\n      .then((data) => setMovies(data.results)) // Set the movies state with the fetched data\n      .catch((error) => console.log(error)); // Log any errors that occur during the fetch\n  }, []);\n\n  // Handle click event when a movie is selected\n  const handleClick = (movie) => {\n    setSelectedMovie(movie);\n  };\n\n  return (\n    <div>\n      <h1>Top Rated Movies</h1>\n      <div className=\"movie-list\">\n        {movies.map((movie) => (\n          <Link\n            key={movie.id}\n            to={`/movie/${movie.id}`}\n            onClick={() => handleClick(movie)}\n            className=\"cards\"\n          >\n            <div className=\"movie-overlay\">\n              <h2 className=\"info-card-title\">{movie.title}</h2>\n              <div className=\"rating\">Rating: {movie.vote_average}</div>\n            </div>\n            <img\n              src={`https://image.tmdb.org/t/p/w300/${movie.poster_path}`}\n              alt={movie.title}\n            />\n          </Link>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default Cards;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,IAAI,QAAQ,kBAAkB;AACvC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEA,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EAC1C,MAAM,CAACS,aAAa,EAAEC,gBAAgB,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;;EAE1DC,SAAS,CAAC,MAAM;IACdU,KAAK,CACH,sGACF,CAAC,CACEC,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CAAC;IAAA,CACpCF,IAAI,CAAEG,IAAI,IAAKP,SAAS,CAACO,IAAI,CAACC,OAAO,CAAC,CAAC,CAAC;IAAA,CACxCC,KAAK,CAAEC,KAAK,IAAKC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC,CAAC,CAAC,CAAC;EAC3C,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMG,WAAW,GAAIC,KAAK,IAAK;IAC7BZ,gBAAgB,CAACY,KAAK,CAAC;EACzB,CAAC;EAED,oBACElB,OAAA;IAAAmB,QAAA,gBACEnB,OAAA;MAAAmB,QAAA,EAAI;IAAgB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACzBvB,OAAA;MAAKwB,SAAS,EAAC,YAAY;MAAAL,QAAA,EACxBhB,MAAM,CAACsB,GAAG,CAAEP,KAAK,iBAChBlB,OAAA,CAACF,IAAI;QAEH4B,EAAE,EAAG,UAASR,KAAK,CAACS,EAAG,EAAE;QACzBC,OAAO,EAAEA,CAAA,KAAMX,WAAW,CAACC,KAAK,CAAE;QAClCM,SAAS,EAAC,OAAO;QAAAL,QAAA,gBAEjBnB,OAAA;UAAKwB,SAAS,EAAC,eAAe;UAAAL,QAAA,gBAC5BnB,OAAA;YAAIwB,SAAS,EAAC,iBAAiB;YAAAL,QAAA,EAAED,KAAK,CAACW;UAAK;YAAAT,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eAClDvB,OAAA;YAAKwB,SAAS,EAAC,QAAQ;YAAAL,QAAA,GAAC,UAAQ,EAACD,KAAK,CAACY,YAAY;UAAA;YAAAV,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACvD,CAAC,eACNvB,OAAA;UACE+B,GAAG,EAAG,mCAAkCb,KAAK,CAACc,WAAY,EAAE;UAC5DC,GAAG,EAAEf,KAAK,CAACW;QAAM;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAClB,CAAC;MAAA,GAZGL,KAAK,CAACS,EAAE;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAaT,CACP;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACrB,EAAA,CA1CID,KAAK;AAAAiC,EAAA,GAALjC,KAAK;AA4CX,eAAeA,KAAK;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}