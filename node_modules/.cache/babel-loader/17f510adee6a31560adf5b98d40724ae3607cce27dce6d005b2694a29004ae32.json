{"ast":null,"code":"var _jsxFileName = \"/home/prince/Desktop/Assignment-IMDB/src/TopRated/index.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport \"./style.css\";\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Index() {\n  _s();\n  const [movie, setMovie] = useState([]);\n  const [selectedMovie, setSelectedMovie] = useState(null);\n  useEffect(() => {\n    fetch(\"https://api.themoviedb.org/3/movie/popular?api_key=ebab107d0e771faee711646843039664&language=en-US\").then(response => response.json()).then(data => {\n      // Sort movies by vote_average in descending order\n      const sortedMovies = data.results.sort((a, b) => b.vote_average - a.vote_average);\n      setMovie(sortedMovies);\n    }).catch(error => console.error(\"Error fetching data: \", error));\n  }, []);\n  const handleClick = movie => {\n    setSelectedMovie(movie);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Popular Movies\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"movie-list\",\n        children: movie.map(movie => /*#__PURE__*/_jsxDEV(Link, {\n          // Set the unique key for each movie\n          to: `/movie/${movie.id}` // Link to the movie details page\n          ,\n          onClick: () => handleClick(movie) // Set the selected movie when clicked\n          ,\n          className: \"cards\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"movie-overlay\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              className: \"info-card-title\",\n              children: movie.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"rating\",\n              children: [\"Rating: \", movie.vote_average]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: `https://image.tmdb.org/t/p/w300/${movie.poster_path}`,\n            alt: movie.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 13\n          }, this)]\n        }, movie.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 8\n    }, this)\n  }, void 0, false);\n}\n_s(Index, \"L+b81jV3H1WCgk4pYEh4ylKKt3Y=\");\n_c = Index;\nexport default Index;\nvar _c;\n$RefreshReg$(_c, \"Index\");","map":{"version":3,"names":["React","useState","useEffect","Link","jsxDEV","_jsxDEV","Fragment","_Fragment","Index","_s","movie","setMovie","selectedMovie","setSelectedMovie","fetch","then","response","json","data","sortedMovies","results","sort","a","b","vote_average","catch","error","console","handleClick","children","fileName","_jsxFileName","lineNumber","columnNumber","className","map","to","id","onClick","title","src","poster_path","alt","_c","$RefreshReg$"],"sources":["/home/prince/Desktop/Assignment-IMDB/src/TopRated/index.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"./style.css\";\nimport { Link } from 'react-router-dom';\n\nfunction Index() {\n  const [movie, setMovie] = useState([]);\n  const [selectedMovie, setSelectedMovie] = useState(null);\n\n  useEffect(() => {\n    fetch(\n      \"https://api.themoviedb.org/3/movie/popular?api_key=ebab107d0e771faee711646843039664&language=en-US\"\n    )\n      .then((response) => response.json())\n      .then((data) => {\n        // Sort movies by vote_average in descending order\n        const sortedMovies = data.results.sort(\n          (a, b) => b.vote_average - a.vote_average\n        );\n        setMovie(sortedMovies);\n      })\n      .catch((error) => console.error(\"Error fetching data: \", error));\n  }, []);\n  const handleClick = (movie) => {\n    setSelectedMovie(movie);\n  };\n\n\n  return (\n    <>\n       <div>\n      <h1>Popular Movies</h1>\n      <div className=\"movie-list\">\n        {/* Map over the movies array and create a Link for each movie */}\n        {movie.map((movie) => (\n          <Link\n            key={movie.id} // Set the unique key for each movie\n            to={`/movie/${movie.id}`} // Link to the movie details page\n            onClick={() => handleClick(movie)} // Set the selected movie when clicked\n            className=\"cards\"\n          >\n            <div className=\"movie-overlay\">\n              <h2 className=\"info-card-title\">{movie.title}</h2>\n              {/* <p className=\"info-card-realeaseDate\">{movie.release_date}</p> */}\n              <div className=\"rating\">Rating: {movie.vote_average}</div>\n              {/* <p className=\"movie-description\">{movie.overview}</p> */}\n            </div>\n            <img\n              src={`https://image.tmdb.org/t/p/w300/${movie.poster_path}`}\n              alt={movie.title}\n            />\n          </Link>\n        ))}\n      </div>\n    </div>\n    </>\n  );\n}\n\nexport default Index;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}