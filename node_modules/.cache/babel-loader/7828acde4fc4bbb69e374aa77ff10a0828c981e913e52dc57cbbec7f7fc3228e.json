{"ast":null,"code":"var _jsxFileName = \"/home/prince/Desktop/Assignment-IMDB/src/TopRated/index.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport \"./style.css\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Index() {\n  _s();\n  const [movies, setMovies] = useState([]);\n  useEffect(() => {\n    fetch(\"https://api.themoviedb.org/3/movie/popular?api_key=ebab107d0e771faee711646843039664&language=en-US\").then(response => response.json()).then(data => {\n      // Sort movies by vote_average in descending order\n      const sortedMovies = data.results.sort((a, b) => b.vote_average - a.vote_average);\n      setMovies(sortedMovies);\n    }).catch(error => console.error(\"Error fetching data: \", error));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"navBar\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"logo\",\n        children: movies.length > 0 && /*#__PURE__*/_jsxDEV(\"img\", {\n          src: `https://image.tmdb.org/t/p/w300/${movie.poster_path}`,\n          alt: movie.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"all\",\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"/\",\n          children: \"Top Rated\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"movieList\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Top Rated Movies\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), movies.map(movie => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"movieCard\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"movieTitle\",\n          children: movie.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"movieRating\",\n          children: [\"Rating: \", movie.vote_average]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"movieOverview\",\n          children: movie.overview\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }, this)]\n      }, movie.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(Index, \"MO6b3PSP3RIUqZ8gtSrBZBVtBbs=\");\n_c = Index;\nexport default Index;\nvar _c;\n$RefreshReg$(_c, \"Index\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Fragment","_Fragment","Index","_s","movies","setMovies","fetch","then","response","json","data","sortedMovies","results","sort","a","b","vote_average","catch","error","console","children","className","length","src","movie","poster_path","alt","title","fileName","_jsxFileName","lineNumber","columnNumber","href","map","overview","id","_c","$RefreshReg$"],"sources":["/home/prince/Desktop/Assignment-IMDB/src/TopRated/index.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"./style.css\";\n\nfunction Index() {\n  const [movies, setMovies] = useState([]);\n\n  useEffect(() => {\n    fetch(\n      \"https://api.themoviedb.org/3/movie/popular?api_key=ebab107d0e771faee711646843039664&language=en-US\"\n    )\n      .then((response) => response.json())\n      .then((data) => {\n        // Sort movies by vote_average in descending order\n        const sortedMovies = data.results.sort(\n          (a, b) => b.vote_average - a.vote_average\n        );\n        setMovies(sortedMovies);\n      })\n      .catch((error) => console.error(\"Error fetching data: \", error));\n  }, []);\n\n  return (\n    <>\n      <div className=\"navBar\">\n        <div className=\"logo\">\n          {/* Your logo component */}\n          {/* Ensure movies array is not empty before accessing poster_path */}\n          {movies.length > 0 && (\n            <img\n            src={`https://image.tmdb.org/t/p/w300/${movie.poster_path}`}\n            alt={movie.title}\n            />\n          )}\n        </div>\n        <div className=\"all\">\n          {/* Link to home */}\n          <a href=\"/\">Top Rated</a>\n        </div>\n      </div>\n      <div className=\"movieList\">\n        <h2>Top Rated Movies</h2>\n        {movies.map((movie) => (\n          <div key={movie.id} className=\"movieCard\">\n            <h3 className=\"movieTitle\">{movie.title}</h3>\n            <p className=\"movieRating\">Rating: {movie.vote_average}</p>\n            <p className=\"movieOverview\">{movie.overview}</p>\n          </div>\n        ))}\n      </div>\n    </>\n  );\n}\n\nexport default Index;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}